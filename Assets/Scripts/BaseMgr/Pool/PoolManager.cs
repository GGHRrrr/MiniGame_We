using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.Events;

//??????
public class PoolData
{
    //?????§Ø???????????
    public GameObject fatherNode;
    //?????????
    public List<GameObject> poolList;

    //??????
    public PoolData(GameObject obj,GameObject poolObj)
    {
        //??List??????????????????pool???????
        fatherNode = new GameObject(obj.name);
        fatherNode.transform.parent = poolObj.transform;
        poolList = new List<GameObject>() { obj };
        AddObj(obj);
    }

    public void AddObj(GameObject obj)
    {
        //???
        obj.SetActive(false);

        poolList.Add(obj);
        //?????????
        obj.transform.parent = fatherNode.transform;
    }

    public GameObject GetObj()
    {
        GameObject obj = null;
        //????????
        obj = poolList[0];
        poolList.RemoveAt(0);
        //?????????
        obj.SetActive(true);
        //?????????
        obj.transform.parent = null;

        return obj;
    }
}


public class PoolManager : BaseManager<PoolManager>
{
    //??????????????
    public Dictionary<string, PoolData> poolDic = new Dictionary<string, PoolData>();

    //????????
    private GameObject poolObj;

    //??????????????
    public void GetObj(string name,UnityAction<GameObject> callback)
    {
        //?§Ø????????List?????????????§Ø???
        if (poolDic.ContainsKey(name) && poolDic[name].poolList.Count > 0)
        {
            //??????????????
            callback(poolDic[name].GetObj());
        }
        else
        {
            //obj = GameObject.Instantiate(Resources.Load<GameObject>(name));
            //??????????????????????????
            //obj.name = name;

            //????????????????
            ResourcesManager.Instance().LoadAsync<GameObject>(name, (o) =>
            {
                o.name = name;
                callback(o);
            });
        }
    }

    //??????????????
    public void AddObj(string name,GameObject obj)
    {
        if (poolObj == null)
        {
            poolObj = new GameObject("Pool");
        }

        //????????????????
        if (poolDic.ContainsKey(name))
        {
            poolDic[name].AddObj(obj);
        }
        else
        {
            poolDic.Add(name, new PoolData(obj,poolObj));
        }
    }

    //?????§Ý???????????????
    public void Clear()
    {
        poolDic.Clear();
        poolObj = null;
    }
}
